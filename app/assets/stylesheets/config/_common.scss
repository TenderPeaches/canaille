/* _common.css => for common classes that aren't tied to one specific page or feature */
/*! not sure if really necessary after CSS Overhaul, could dump in _reset.scss */

/* class added to elements that need to clash with the surrounding content */
.contrast-text {
    color: var(--color-accent-light);       /* clash with text (by not using secondary color) and background (by not using primary) */
}

/* content is whatever content is the central piece of the display  */ 
.content {
    position: relative;
    margin: auto;                                                   /* auto center */
    display: flex;                                                  /* vertical flex */
    flex-direction: column;                                         /* vertical flex */
    align-content: center;                                          /* align items along center axis */
    width: calc(min(100vw, var(--max-content-width--screen)));      /* set upper boundary on content width */ 
    /* max-width: var(--max-content-width--phone); for now design everything as if for phone */
}

/* force-hidden elements */
.hidden {
    display: none;
}

/* actions are usually buttons/CTAs located within a row or form */
.actions {
    display: flex;                                                  /* display in a even row/column */
    flex: 0 0 auto;                                                 /* harmonize if part of a flex dispaly */
    align-items: center;                                            /* center vertically */
    gap: var(--size-xs);                                            /* internal spacing */
    justify-content: space-around;                                  /* spread buttons evenly */
}

/* bigger text */
.text--big {
    font-size: 1.5rem;
}

/* displays stuff in a line, usually for multiple bits of data that are meant to be displayed as a single block/line */ 
.line {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    align-items: center;
}

/* for stuff that is displayed as a pair of elements, tucked alongside the edges */
.binome {
    display: flex;                                      /* horizontal flex */
    flex-direction: row;                                /* horizontal flex */
    justify-content: space-between;                     /* space between the elements, none between the edges */
    
    & > * {
        flex: 1 1 50%;
    }

    /* tuck the left-most element to the left */
    & > *:first-child {
        text-align: left;
    }

    /* tuck the right-most element to the right */
    & > *:last-child {
        text-align: right;
    }
}

/* typically involves a label and a data bit, display can vary depending on device width */ 
.field {
    display: flex;
    flex-direction: column;
}

/* labels present data, but contain none */
.label {
    color: var(--color-primary-dark);                     /* use a different color than regular text, but one that meshes with background */
}